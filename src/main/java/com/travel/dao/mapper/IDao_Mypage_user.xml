<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- (namespace) 인터페이스 경로 -->
<mapper namespace="com.travel.dao.user.IDao_Mypage_user">

	<!-- 마이페이지 -->

	<!-- 환불 내역 시작 -->

	<update id="orderInfoUpdate">

		UPDATE THISORDER
		SET COUPON_NO = NULL
		WHERE M_NO = #{param1}
		AND ORDER_NO = #{param2}

	</update>

	<select id="orderInfoSelect"
		resultType="com.travel.dto.user.DTO_Mypage_user">

		SELECT DISTINCT
		A.ORDER_NO, C.S_NAME ,A.PAYMENT_PRICE || '
		원' AS PAYMENT_PRICE,
		TO_CHAR(A.CHECK_IN_DATE, 'YYYY-MM-DD') AS
		CHECK_IN_DATE,
		TO_CHAR(A.CHECK_OUT_DATE, 'YYYY-MM-DD') AS
		CHECK_OUT_DATE,
		TO_CHAR(A.ORDER_DATE, 'YYYY-MM-DD') AS ORDER_DATE
		FROM
		THISORDER A LEFT JOIN THISORDERDTL B ON A.ORDER_NO = B.ORDER_NO
		LEFT
		JOIN TMSTSTAY C ON B.S_NO = C.S_NO
		WHERE A.M_NO = #{param1} AND
		A.ORDER_NO = #{param2}

	</select>

	<select id="orderRoomInfoSelect"
		resultType="com.travel.dto.user.DTO_Mypage_user">

		SELECT ROW_NUMBER() OVER (ORDER BY B.R_NO DESC) AS ROW_NUM
		,C.R_NAME ,C.R_PRICE || '원' AS R_PRICE
		FROM THISORDER A
		LEFT JOIN
		THISORDERDTL B ON A.ORDER_NO = B.ORDER_NO
		LEFT JOIN TMSTROOM C ON
		B.S_NO = C.S_NO AND B.R_NO = C.R_NO
		WHERE A.M_NO = #{param1} AND
		A.ORDER_NO = #{param2}

	</select>

	<select id="orderDiscountInfoSelect"
		resultType="com.travel.dto.user.DTO_Mypage_user">

		SELECT NVL(TO_CHAR(B.COUPON_NO),'0') || ' 원'AS COUPON_NO
		,NVL(B.COUPON_DETAIL,'-') AS COUPON_NAME
		,NVL(SUM(NVL(C.POINT_OUT,0)),0) || ' 포인트' AS POINT
		FROM THISORDER A
		LEFT JOIN TMSTCOUPON B ON A.COUPON_NO = B.COUPON_NO
		LEFT JOIN THISPOINT
		C ON A.ORDER_NO = C.ORDER_NO AND A.M_NO = C.M_NO
		WHERE A.ORDER_NO =
		#{param2}
		AND A.M_NO = #{param1} GROUP BY B.COUPON_NO, B.COUPON_DETAIL     <!-- 
			sum 사용으로 groupby 진행 -->

	</select>

	<select id="refundListSelect"
		resultType="com.travel.dto.user.DTO_Mypage_user">

		SELECT CODE AS REFUND_REASON_NO ,CODENAME AS
		REFUND_REASON_NAME
		FROM TMSTCODE
		WHERE GRPCODE = 9

	</select>

	<insert id="refundInsert">

		INSERT INTO THISREFUND
		(
		REFUND_NO ,ORDER_NO
		,REFUND_REASON ,REFUND_PRICE
		,REFUND_PERCENTAGE ,STEP_FLAG ,STEP1_DATE
		,STEP2_DATE
		)
		SELECT DISTINCT
		(SELECT NVL(MAX(REFUND_NO),0) + 1 FROM
		THISREFUND)
		,A.ORDER_NO ,#{param3} ,A.PAYMENT_PRICE ,NULL ,1 ,SYSDATE
		,NULL
		FROM THISORDER A
		WHERE A.M_NO = #{param1} AND A.ORDER_NO =
		#{param2}

	</insert>

	<insert id="insertPushAL">

		INSERT INTO THISPUSHAL
		(
		AL_NO, M_NO, AL_CONTENT, AL_GUBUN, ORDER_NO,
		DELIVERY_NO, AL_TIME
		)
		SELECT (SELECT NVL(MAX(AL_NO),0) + 1 FROM
		THISPUSHAL)
		,#{param1}
		,#{param3}
		,2                   	<!-- 2번 환불 -->
		,#{param2}
		,NULL
		,SYSDATE
		FROM THISORDER A
		WHERE A.M_NO = #{param1}
		AND
		A.ORDER_NO = #{param2}

	</insert>

	<!-- 환불 내역 끝 -->


	<select id="pay_list"
		resultType="com.travel.dto.user.DTO_Mypage_user">

		SELECT A.ROW_NUM,A.S_NO, A.S_IMG1, A.S_NAME, A.ORDER_NO, A.STEP_FLAG, A.R_NAME, A.R_NO,
				TO_CHAR(A.CHECK_IN_DATE, 'YYYY-MM-DD') AS CHECK_IN_DATE,
				TO_CHAR(A.CHECK_OUT_DATE, 'YYYY-MM-DD') AS CHECK_OUT_DATE,
				TO_CHAR(A.ORDER_DATE, 'YYYY-MM-DD') AS ORDER_DATE, A.REVIEW_FLAG
		FROM (
		SELECT S.S_NO, S.S_IMG1, S.S_NAME, O.ORDER_NO, O.REVIEW_FLAG,
		(
		CASE WHEN RF.STEP_FLAG IS NOT NULL THEN RF.STEP_FLAG
		WHEN RF.STEP_FLAG IS NULL THEN
		(
		CASE WHEN TO_CHAR(O.CHECK_IN_DATE, 'YYYY-MM-DD') > TO_CHAR(SYSDATE,
		'YYYY-MM-DD') THEN 3
		WHEN (TO_CHAR(SYSDATE,'YYYY-MM-DD') >= TO_CHAR(O.CHECK_IN_DATE,
		'YYYY-MM-DD') AND O.REVIEW_FLAG = 'N' ) THEN 4
		WHEN (TO_CHAR(SYSDATE,'YYYY-MM-DD') >= TO_CHAR(O.CHECK_IN_DATE,
		'YYYY-MM-DD') AND O.REVIEW_FLAG = 'Y' ) THEN 5 END
		) END
		) AS STEP_FLAG,
		O.CHECK_IN_DATE, O.CHECK_OUT_DATE, O.ORDER_DATE,
		ROW_NUMBER() OVER (ORDER BY O.ORDER_NO DESC) AS ROW_NUM, R.R_NO,
		LISTAGG(R.R_NAME,',') WITHIN GROUP(ORDER BY R.R_NAME) AS R_NAME
		FROM THISORDER O LEFT JOIN TMSTMEMBER M ON M.M_NO = O.M_NO
		LEFT JOIN THISORDERDTL OD ON O.ORDER_NO = OD.ORDER_NO
		AND O.S_NO = OD.S_NO
		LEFT JOIN TMSTSTAY S ON O.S_NO = S.S_NO
		LEFT JOIN TMSTROOM R ON OD.S_NO = R.S_NO
		AND OD.R_NO = R.R_NO
		LEFT JOIN THISREFUND RF ON O.ORDER_NO = RF.ORDER_NO
		WHERE M.M_NO = #{param1}
		GROUP BY S.S_NO, S.S_IMG1, S.S_NAME, O.ORDER_NO, O.REVIEW_FLAG,
		RF.STEP_FLAG, O.CHECK_IN_DATE, O.CHECK_OUT_DATE, O.ORDER_DATE, R.R_NO
		) A
		WHERE
		A.ROW_NUM BETWEEN #{param2} AND #{param3}
	</select>


	<select id="paging_pay" resultType="Integer">
		SELECT COUNT(*)
		FROM THISORDER
		O
		LEFT JOIN TMSTMEMBER M ON M.M_NO=O.M_NO
		LEFT JOIN TMSTSTAY S ON
		O.S_NO=S.S_NO
		LEFT JOIN TMSTROOM R ON O.S_NO=R.S_NO
		WHERE
		M.M_NO=#{param1}
	</select>
	<select id="paging_review" resultType="Integer">
		SELECT COUNT(*)
		FROM
		THISREVIEW
		WHERE M_NO = #{param1}
	</select>
	<select id="paging_ing_event" resultType="Integer">
		SELECT COUNT(*)
		FROM
		TMSTEVENT E
		LEFT JOIN THISATTEND TA ON E.EVENT_NO = TA.EVENT_NO
		LEFT
		JOIN TMSTMEMBER M ON TA.M_NO = M.M_NO
		WHERE M.M_NO = #{param1} AND
		E.EVENT_FLAG = 2
	</select>
	<select id="paging_end_event" resultType="Integer">
		SELECT COUNT(*)
		FROM
		TMSTEVENT E
		LEFT JOIN THISATTEND TA ON E.EVENT_NO = TA.EVENT_NO
		LEFT
		JOIN TMSTMEMBER M ON TA.M_NO = M.M_NO
		WHERE M.M_NO = #{param1} AND
		E.EVENT_FLAG = 3
	</select>

	<select id="paging_point" resultType="Integer">
		SELECT COUNT(*)
		FROM
		THISPOINT
		WHERE M_NO = #{param1}
	</select>
	<select id="paging_coupon" resultType="Integer">
		SELECT COUNT(*)
		FROM
		THISUSECOUPON
		WHERE M_NO=#{param1}
	</select>

	<select id="review_list"
		resultType="com.travel.dto.user.DTO_Mypage_user">
		SELECT A.REVIEW_NO, A.PHOTO_URL, A.REVIEW_CONTENT, A.LIKES,
		A.S_NAME, A.S_NO
		FROM (
		SELECT R.REVIEW_NO, R.PHOTO_URL,
		R.REVIEW_CONTENT,
		R.LIKES, S.S_NAME, S.S_NO,
		ROW_NUMBER() OVER (ORDER BY
		R.REVIEW_NO) AS ROW_NUM
		FROM THISREVIEW R
		LEFT JOIN TMSTMEMBER M ON
		R.M_NO = M.M_NO
		LEFT JOIN TMSTSTAY S ON R.S_NO = S.S_NO
		WHERE M.M_NO =
		#{param1}
		) A
		WHERE A.ROW_NUM BETWEEN #{param2} AND #{param3}
	</select>

	<select id="point_list"
		resultType="com.travel.dto.user.DTO_Mypage_user">
		SELECT A.ROW_NUM, A.POINT_NO, TO_CHAR(A.POINT_USEDATE, 'YYYY-MM-DD')
		AS POINT_USEDATE,
		A.POINT_TYPE, A.POINT_IN, A.POINT_OUT, A.M_POINT
		FROM
		(
		SELECT
		P.POINT_NO, P.POINT_USEDATE, P.POINT_TYPE, P.POINT_IN,
		P.POINT_OUT, M.M_POINT,
		ROW_NUMBER() OVER (ORDER BY P.POINT_NO DESC) AS ROW_NUM
		FROM THISPOINT P
		LEFT JOIN TMSTMEMBER M ON P.M_NO = M.M_NO
		WHERE M.M_NO = #{param1}
		) A
		WHERE A.ROW_NUM BETWEEN #{param2} AND #{param3}
	</select>

	<select id="coupon_list"
		resultType="com.travel.dto.user.DTO_Mypage_user">
		SELECT ROWNUM AS ROW_NUMBER, C.COUPON_NO, C.COUPON_QTY
		FROM
		THISCOUPON C
		LEFT JOIN TMSTMEMBER M ON C.M_NO = M.M_NO
		WHERE M.M_NO =
		#{param1}
	</select>

	<select id="usecoupon_list"
		resultType="com.travel.dto.user.DTO_Mypage_user">
		SELECT *
		FROM (
		SELECT ROWNUM AS ROW_NUMBER, UC.COUPON_NO,
		O.ORDER_NO,
		TO_CHAR(UC.COUPON_USEDATE, 'YYYY-MM-DD') AS COUPON_USEDATE
		FROM
		TMSTMEMBER M
		LEFT JOIN THISORDER O ON O.M_NO=M.M_NO
		LEFT JOIN
		THISUSECOUPON UC ON
		O.COUPON_NO = UC.COUPON_NO
		WHERE M.M_NO = #{param1}
		AND COUPON_USEFLAG =
		'Y'
		)WHERE ROW_NUMBER BETWEEN #{param2} AND
		#{param3}
	</select>

	<select id="event_list"
		resultType="com.travel.dto.user.DTO_Mypage_user">
		SELECT A.FILENAME2, A.EVENT_NO
		FROM(
		SELECT ROWNUM AS
		ROW_NUMBER, E.FILENAME2, E.EVENT_NO
		FROM TMSTEVENT E
		LEFT JOIN
		THISATTEND TA ON E.EVENT_NO = TA.EVENT_NO
		LEFT JOIN TMSTMEMBER M ON
		TA.M_NO = M.M_NO
		WHERE M.M_NO = #{param1} AND E.EVENT_FLAG=2) A
		WHERE
		ROW_NUMBER BETWEEN #{param2} AND #{param3}
	</select>

	<select id="endevent_list"
		resultType="com.travel.dto.user.DTO_Mypage_user">
		SELECT A.FILENAME2, A.EVENT_NO
		FROM (
		SELECT E.FILENAME2,
		E.EVENT_NO
		FROM TMSTEVENT E
		LEFT JOIN THISATTEND TA ON E.EVENT_NO =
		TA.EVENT_NO
		WHERE E.EVENT_FLAG = 3
		AND (
		E.M_NO1 = #{param1}
		OR E.M_NO2 =
		#{param1}
		OR E.M_NO3 = #{param1} )
		) A
		WHERE ROWNUM BETWEEN #{param2} AND
		#{param3}
	</select>
</mapper>